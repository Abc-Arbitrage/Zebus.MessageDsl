{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Zebus Messages",
    "uuid": "86FA8B6A-FA5E-4139-904B-91C75675BC6B",
    "scopeName": "source.zebusmsg",
    "fileTypes": [
        "msg"
    ],
    "patterns": [
        {
            "include": "#messages"
        }
    ],
    "repository": {
        "messages": {
            "patterns": [
                {
                    "include": "#comments"
                },
                {
                    "include": "#pragma"
                },
                {
                    "include": "#keywords"
                },
                {
                    "include": "#attributes"
                },
                {
                    "include": "#messageName"
                },
                {
                    "include": "#literals"
                }
            ]
        },
        "comments": {
            "patterns": [
                {
                    "name": "comment.block.zebusmsg",
                    "begin": "/\\*",
                    "end": "\\*/",
                    "patterns": [
                        {
                            "include": "#commentContent"
                        }
                    ]
                },
                {
                    "name": "comment.line",
                    "begin": "//",
                    "end": "$",
                    "patterns": [
                        {
                            "include": "#commentContent"
                        }
                    ]
                }
            ]
        },
        "commentContent": {
            "patterns": [
                {
                    "name": "keyword.control",
                    "match": "(?i)\\b(TODO|FIXME|HACK|ISSUE)\\b"
                }
            ]
        },
        "pragma": {
            "patterns": [
                {
                    "name": "meta.preprocessor.zebusmsg",
                    "begin": "^\\s*#\\s*pragma\\b",
                    "end": "$",
                    "patterns": [
                        {
                            "include": "#comments"
                        }
                    ]
                }
            ]
        },
        "attributes": {
            "patterns": [
                {
                    "name": "emphasis",
                    "begin": "\\[",
                    "end": "\\]",
                    "patterns": [
                        {
                            "include": "#attributes"
                        },
                        {
                            "include": "#comments"
                        },
                        {
                            "include": "#keywords"
                        },
                        {
                            "include": "#literals"
                        }
                    ]
                }
            ]
        },
        "messageName": {
            "patterns": [
                {
                    "name": "entity.name.class.zebusmsg",
                    "match": "\\w+(?=\\s*([\\[(<?]|\\b\\w))"
                },
                {
                    "name": "entity.name.type.zebusmsg",
                    "match": "\\w+(?=\\s*!\\s*\\()"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.zebusmsg",
                    "match": "\\b(abstract|add|alias|as|ascending|async|await|base|bool|break|by|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|equals|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|nameof|namespace|new|null|object|on|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|when|where|while|yield)\\b"
                }
            ]
        },
        "literals": {
            "patterns": [
                {
                    "name": "string.quoted.double.zebusmsg",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                            "name": "constant.character.escape.zebusmsg",
                            "match": "\\\\."
                        }
                    ]
                },
                {
                    "name": "string.quoted.double.zebusmsg",
                    "begin": "@\"",
                    "end": "\"(?!\")",
                    "patterns": [
                        {
                            "name": "constant.character.escape.zebusmsg",
                            "match": "\"\""
                        }
                    ]
                },
                {
                    "name": "string.quoted.single.zebusmsg",
                    "match": "'(\\\\.|.)'"
                },
                {
                    "name": "constant.numeric",
                    "match": "\\b0[xX][0-9a-fA-F]+|(\\b\\d+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?"
                }
            ]
        }
    }
}
